{"version":3,"file":"static/iframe.4b2c4e8baeb57283fd35.bundle.js","sources":["webpack:///./src/note/note-calls.js"],"sourcesContent":["// @flow\n\nimport parseObject from 'sharyn/util/parse-object'\n\nimport { NOTES_PATH, notePath } from 'note/note-paths'\n\nexport const getNotesCall = {\n  query: '{ getNotes { id, title, description } }',\n  mapResp: ({ getNotes: notes }: { getNotes: Object }) => ({ notes }),\n}\n\nexport const getNoteCall = {\n  query: 'query ($id: ID!) { getNote(id: $id) { id, title, description } }',\n  mapResp: ({ getNote: note }: { getNote: Object }) => ({ note }),\n}\n\nexport const createNoteCall = {\n  query:\n    'mutation ($input: NoteInput!) { createNote(input: $input) { note { id }, invalidFields { name, message } } }',\n  mapFields: (fields: Object) => ({ input: parseObject(fields) }),\n  mapResp: ({ createNote: result }: { createNote: Object }) => ({\n    createdNoteId: result?.note?.id,\n  }),\n  successRedirect: ({ createdNoteId }: { createdNoteId: string }) => notePath(createdNoteId),\n}\n\nexport const updateNoteCall = {\n  query:\n    'mutation ($id: ID!, $input: NoteInput!) { updateNote(id: $id, input: $input) { note { id }, invalidFields { name, message } } }',\n  mapFields: (fields: Object) => ({ input: parseObject(fields) }),\n  mapResp: ({ updateNote: result }: { updateNote: Object }) => ({\n    updatedNoteId: result?.note?.id,\n  }),\n  successRedirect: ({ updatedNoteId }: { updatedNoteId: string }) => notePath(updatedNoteId),\n}\n\nexport const deleteNoteCall = {\n  query: 'mutation ($id: ID!) { deleteNote(id: $id) }',\n  successRedirect: NOTES_PATH,\n}\n"],"mappings":"AAEA","sourceRoot":""}